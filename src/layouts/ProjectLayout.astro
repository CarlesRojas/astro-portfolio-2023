---
import CloseIcon from '@assets/icons/close-line.svg';
import { FADE_ANIMATION_DURATION } from '@src/constants';
---

<close-project>
  <main id="projectPage" style={{ '--animation-duration': `${FADE_ANIMATION_DURATION}s` }}>
    <div id="projectContainer">
      <slot />
      <button type="button" id="close"><img src={CloseIcon} alt="Close Icon" /></button>
    </div>
  </main>
</close-project>

<script>
  import { FADE_ANIMATION_DURATION } from '@src/constants';

  class CloseProject extends HTMLElement {
    projectContainer: HTMLElement | null = null;
    interval: ReturnType<typeof setInterval> | null = null;

    constructor() {
      super();
      const container = this.querySelector('#projectPage');
      const closeButton = this.querySelector('#close');
      this.projectContainer = this.querySelector('#projectContainer');

      container?.addEventListener('click', this.closeProject.bind(this));
      closeButton?.addEventListener('click', this.closeProject.bind(this));
      this.projectContainer?.addEventListener('click', (e) => e.stopPropagation());
    }

    closeProject = () => {
      if (this.interval) clearInterval(this.interval);
      this.interval = setInterval(() => {
        this.projectContainer?.classList.remove('slideOut');
      }, FADE_ANIMATION_DURATION * 2000);

      this.projectContainer?.classList.add('slideOut');

      setTimeout(() => {
        window.location.href = '/';
      }, FADE_ANIMATION_DURATION * 1000);
    };
  }

  customElements.define('close-project', CloseProject);
</script>

<style is:global lang="scss">
  @import '../styles/mixins.scss';
  @import '../styles/shared.scss';

  main {
    position: relative;
    width: 100%;
    height: 100%;
    padding: var(--spacing);
    display: flex;
    align-items: center;
    justify-content: center;

    #projectContainer {
      position: relative;
      max-width: 100rem;
      width: 100%;
      height: 100%;
      @include card(1);
      animation: slideIn var(--animation-duration) ease-in-out;
      animation-fill-mode: forwards;
      translate: 0 10rem;
      opacity: 0;

      @keyframes slideIn {
        0% {
          translate: 0 10rem;
          opacity: 0;
        }
        100% {
          translate: 0 0vh;
          opacity: 1;
        }
      }

      &.slideOut {
        animation: slideOut var(--animation-duration) ease-in-out;
        animation-fill-mode: forwards;
        opacity: 1;

        @keyframes slideOut {
          0% {
            translate: 0 0vh;
            opacity: 1;
          }
          100% {
            translate: 0 10rem;
            opacity: 0;
          }
        }
      }

      #close {
        @include card(2);
        padding: 0.5rem;
        position: absolute;
        top: max(calc(var(--spacing) * -0.5), -1rem);
        right: max(calc(var(--spacing) * -0.5), -1rem);
        width: 2.5rem;
        height: 2.5rem;

        @include mouse {
          cursor: pointer;

          &:hover {
            scale: 1.1;
          }
        }

        img {
          width: 100%;
          height: 100%;
          filter: invert(1);

          @include light {
            filter: invert(0);
          }

          @include dark {
            filter: invert(1);
          }
        }
      }
    }
  }
</style>

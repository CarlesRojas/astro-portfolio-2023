---
import Hero from '@src/components/Hero.astro';
import { FADE_ANIMATION_DURATION } from '@src/constants';
import Layout from '@src/layouts/Layout.astro';

interface Entry {
  title: string;
  place: string;
  date: string;
}

const experience = Object.values((await Astro.glob('../assets/aboutme/experience.md'))[0].frontmatter).map(
  (elem) => elem as Entry,
);

const qualifications = Object.values((await Astro.glob('../assets/aboutme/qualifications.md'))[0].frontmatter).map(
  (elem) => elem as Entry,
);
---

<Layout title={'About me'}>
  <main id="about" style={{ '--animation-duration': `${FADE_ANIMATION_DURATION}s` }}>
    <Hero header footer about />
    <Hero header about />

    <div class="content">
      <section>
        <h1>Experience</h1>

        {
          experience.map(({ title, place, date }, i) => (
            <div style={{ '--index': i }}>
              <h2>{title}</h2>
              <h3>{place}</h3>
              <p>{date}</p>
            </div>
          ))
        }
      </section>

      <section>
        <h1>Qualifications</h1>

        {
          qualifications.map(({ title, place, date }, i) => (
            <div style={{ '--index': i }}>
              <h2>{title}</h2>
              <h3>{place}</h3>
              <p>{date}</p>
            </div>
          ))
        }
      </section>

      <Hero footer about />
    </div>
  </main>
</Layout>

<style lang="scss">
  @import '../styles/mixins.scss';
  @import '../styles/shared.scss';

  #about {
    @include page;
    position: relative;
    width: 100%;
    height: fit-content;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: 1rem;
    animation: fadeIn var(--animation-duration) ease-in-out;
    animation-fill-mode: forwards;
    opacity: 0;

    @keyframes fadeIn {
      0% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    @include tablet {
      gap: 0;
    }

    @include landscape {
      @include desktop {
        position: relative;
        display: grid;
        height: 100%;
        max-height: 100%;
        width: 100%;
        max-width: 100%;
        grid-template-columns: min(27%, 40rem) 1fr;
      }
    }

    .content {
      position: relative;
      width: 100%;
      max-width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      overflow-x: hidden;
      padding: var(--spacing);
      gap: calc(var(--spacing) * 4);

      @include tablet {
        gap: calc(var(--spacing) * 2);
      }

      @include landscape {
        @include desktop {
          display: grid;
          grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);
          grid-template-rows: minmax(0, 1fr);
          gap: var(--spacing);
        }
      }

      section {
        display: flex;
        flex-direction: column;
        gap: calc(var(--spacing) * 2);

        @include tablet {
          gap: var(--spacing);
        }

        h1 {
          @include header;
        }

        div {
          display: flex;
          flex-direction: column;
          gap: 0.4rem;
          padding-left: 1rem;
          border-left: solid 2px var(--accentLow);
          animation: moveIn calc(var(--animation-duration) * 0.75) ease-in-out;
          animation-delay: calc(
            calc(var(--animation-duration) * 0.75) + calc(calc(var(--animation-duration) * 0.5) * var(--index))
          );
          animation-fill-mode: forwards;
          opacity: 0;
          translate: 0 1rem;

          @include light {
            border-left: solid 2px var(--accent);
          }

          @keyframes moveIn {
            0% {
              opacity: 0;
              translate: 0 1rem;
            }
            100% {
              opacity: 1;
              translate: 0 0rem;
            }
          }

          h2 {
            @include header-medium;
            color: var(--accentLow);

            @include light {
              color: var(--accent);
            }
          }

          h3 {
            @include text;
          }

          p {
            @include text;
            @include text-low;
          }
        }
      }
    }
  }
</style>

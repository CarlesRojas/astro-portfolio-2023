---
import Hero from '@src/components/Hero.astro';
import { FADE_ANIMATION_DURATION } from '@src/constants';
import Layout from '@src/layouts/Layout.astro';

interface Entry {
  title: string;
  place: string;
  date: string;
}

const experience = Object.values((await Astro.glob('../assets/aboutme/experience.md'))[0].frontmatter).map(
  (elem) => elem as Entry,
);

const qualifications = Object.values((await Astro.glob('../assets/aboutme/qualifications.md'))[0].frontmatter).map(
  (elem) => elem as Entry,
);

const technologies = Object.values((await Astro.glob('../assets/aboutme/technologies.md'))[0].frontmatter);
---

<Layout title={'About me'}>
  <main id="about" style={{ '--animation-duration': `${FADE_ANIMATION_DURATION}s` }}>
    <Hero header footer about />
    <Hero header about />

    <div class="content">
      <div class="scroll">
        <section class="technologies">
          <h1>Technologies</h1>
          {technologies.map((technology, i) => <p style={{ '--index': i }}>{technology}</p>)}
        </section>

        <section class="experience">
          <h1>Experience</h1>

          {
            experience.map(({ title, place, date }, i) => (
              <div style={{ '--index': i }}>
                <h2>{title}</h2>
                <h3>{place}</h3>
                <p>{date}</p>
              </div>
            ))
          }
        </section>

        <section class="qualifications">
          <h1>Qualifications</h1>

          {
            qualifications.map(({ title, place, date }, i) => (
              <div style={{ '--index': i }}>
                <h2>{title}</h2>
                <h3>{place}</h3>
                <p>{date}</p>
              </div>
            ))
          }
        </section>

        <section class="cv">
          <h1>Resume</h1>
          <a href="assets/CarlesRojas_SoftwareDeveloper_CV.pdf" target="_blank">Download CV</a>
        </section>
      </div>

      <Hero footer about />
    </div>
  </main>
</Layout>

<style lang="scss">
  @import '../styles/mixins.scss';
  @import '../styles/shared.scss';

  @keyframes moveIn {
    0% {
      opacity: 0;
      translate: 0 1rem;
    }
    100% {
      opacity: 1;
      translate: 0 0rem;
    }
  }

  #about {
    @include page;
    position: relative;
    width: 100%;
    height: fit-content;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: 1rem;
    animation: fadeIn var(--animation-duration) ease-in-out;
    animation-fill-mode: forwards;
    opacity: 0;

    @keyframes fadeIn {
      0% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    @include tablet {
      gap: 0;
    }

    @include landscape {
      @include desktop {
        position: relative;
        display: grid;
        height: 100%;
        max-height: 100%;
        width: 100%;
        max-width: 100%;
        grid-template-columns: min(27%, 40rem) 1fr;
      }
    }
    .content {
      position: relative;
      width: 100%;
      max-width: 100%;
      height: 100%;
      max-height: 100%;
      padding: var(--spacing);
      overflow: auto;

      .scroll {
        position: relative;
        width: 100%;
        height: fit-content;
        display: flex;
        flex-direction: column;
        justify-content: center;
        gap: calc(var(--spacing) * 4);

        @include tablet {
          gap: calc(var(--spacing) * 2);
        }

        @include landscape {
          @include desktop {
            display: grid;
            grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);
            grid-template-rows: minmax(0, min-content) minmax(0, 1fr);
            grid-template-areas:
              'tech cv'
              'expe qual';
            gap: var(--spacing);
          }
        }

        section {
          display: flex;
          flex-direction: column;
          gap: calc(var(--spacing) * 2);

          @include tablet {
            gap: var(--spacing);
          }

          h1 {
            @include header;
            width: 100%;
          }

          &.experience {
            grid-area: expe;
          }

          &.qualifications {
            grid-area: qual;
          }

          &.cv {
            grid-area: cv;
            gap: var(--spacing);

            a {
              @include card(2);
              width: fit-content;
              padding: 0.75rem 1rem;

              @include mouse {
                cursor: pointer;

                &:hover {
                  transform: scale(1.1);
                }
              }
            }
          }

          &.technologies {
            grid-area: tech;
            flex-direction: row;
            flex-wrap: wrap;
            gap: 1rem;

            p {
              @include card(3);
              @include text-bold;
              color: black;
              background-color: var(--accentLow) !important;
              padding: 0.75rem 1rem;
              animation: moveIn calc(var(--animation-duration) * 0.75) ease-in-out;
              animation-delay: calc(
                calc(var(--animation-duration) * 0.75) + calc(calc(var(--animation-duration) * 0.5) * var(--index))
              );
              animation-fill-mode: forwards;
              opacity: 0;
              translate: 0 1rem;

              @include light {
                color: white;
                background-color: var(--accent) !important;
              }
            }
          }

          div {
            display: flex;
            flex-direction: column;
            gap: 0.4rem;
            padding-left: 1rem;
            border-left: solid 2px var(--accentLow);
            animation: moveIn calc(var(--animation-duration) * 0.75) ease-in-out;
            animation-delay: calc(
              calc(var(--animation-duration) * 0.75) + calc(calc(var(--animation-duration) * 0.5) * var(--index))
            );
            animation-fill-mode: forwards;
            opacity: 0;
            translate: 0 1rem;

            @include light {
              border-left: solid 2px var(--accent);
            }

            h2 {
              @include header-medium;
              color: var(--accentLow);

              @include light {
                color: var(--accent);
              }
            }

            h3 {
              @include text;
            }

            p {
              @include text;
              @include text-low;
            }
          }
        }
      }
    }
  }
</style>

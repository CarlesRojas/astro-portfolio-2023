---
import Hero from '@components/Hero.astro';
import Section from '@components/Section.astro';
import Layout from '@layouts/Layout.astro';
import type { Project } from '@src/constants';
import { FADE_ANIMATION_DURATION } from '@src/constants';

const webProjects = await Astro.glob(`../assets/web/*.md`);
const gameProjects = await Astro.glob(`../assets/game/*.md`);
const designProjects = await Astro.glob(`../assets/design/*.md`);

const sortByDate = (a: Project, b: Project) => {
  const dateA = new Date(a.date);
  const dateB = new Date(b.date);

  return dateB.getTime() - dateA.getTime();
};

const sortedWebProjects = webProjects.map((project) => project.frontmatter as Project).sort(sortByDate);
const sortedGameProjects = gameProjects.map((project) => project.frontmatter as Project).sort(sortByDate);
const sortedDesignProjects = designProjects.map((project) => project.frontmatter as Project).sort(sortByDate);
---

<Layout title={'Portfolio'}>
  <main id="home" style={{ '--animation-duration': `${FADE_ANIMATION_DURATION}s` }}>
    <Hero header footer />
    <Hero header />

    <div class="content">
      <Section projects={sortedWebProjects} title="Web Development" />
      <Section projects={sortedGameProjects} title="Game Development" />
      <Section projects={sortedDesignProjects} title="Product Design" />
    </div>

    <Hero footer />
  </main>
</Layout>

<style lang="scss">
  @import '../styles/mixins.scss';
  @import '../styles/shared.scss';

  #home {
    @include page;
    position: relative;
    width: 100%;
    height: fit-content;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: 1rem;
    animation: fadeIn var(--animation-duration) ease-in-out;
    animation-fill-mode: forwards;
    opacity: 0;

    @keyframes fadeIn {
      0% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    @include tablet {
      gap: 0;
    }

    @include landscape {
      @include desktop {
        position: relative;
        display: grid;
        height: 100%;
        max-height: 100%;
        width: 100%;
        max-width: 100%;
        grid-template-columns: min(27%, 40rem) 1fr;
      }
    }

    .content {
      position: relative;
      width: 100%;
      max-width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      overflow-x: hidden;
      padding-top: 1.5rem;
    }
  }
</style>
